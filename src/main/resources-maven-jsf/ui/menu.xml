<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes		SYSTEM "../entities/standard_uicomponent_attributes.xml">
<!ENTITY widget_var_attribute					SYSTEM "../entities/widget_var_attribute.xml">
]>
<component>
	<tag>menu</tag>
	<tagClass>org.primefaces.component.menu.MenuTag</tagClass>
	<componentClass>org.primefaces.component.menu.Menu</componentClass>
	<componentType>org.primefaces.component.Menu</componentType>
	<componentFamily>org.primefaces.component</componentFamily>
	<rendererType>org.primefaces.component.MenuRenderer</rendererType>
	<rendererClass>org.primefaces.component.menu.MenuRenderer</rendererClass>
	<parent>org.primefaces.component.menu.AbstractMenu</parent>
    <description>Menu is a navigation component with various customized modes like multi tiers, ipod style sliding and overlays.</description>
    <interfaces>
		<interface>
			<name>org.primefaces.component.api.Widget</name>
		</interface>
	</interfaces>
	<attributes>
		&standard_uicomponent_attributes;
		&widget_var_attribute;
		<attribute>
			<name>model</name>
			<required>false</required>
			<type>org.primefaces.model.MenuModel</type>
            <description>A menu model instance to create menu programmatically.</description>
		</attribute>
        <attribute>
			<name>trigger</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Id of component whose click event will show the dynamic positioned menu.</description>
		</attribute>
        <attribute>
			<name>my</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Corner of menu to align with trigger element.</description>
		</attribute>
        <attribute>
			<name>at</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Corner of trigger to align with menu element.</description>
		</attribute>
        <attribute>
			<name>position</name>
			<required>false</required>
			<type>java.lang.String</type>
			<defaultValue>static</defaultValue>
            <description>Defines positioning type of menu, either static or dynamic. Default is static.</description>
		</attribute>
        <attribute>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
			<defaultValue>plain</defaultValue>
            <description>Type of menu, valid values are plain, tiered and sliding. Default is plain.</description>
		</attribute>
        <attribute>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Inline style of the main container element.</description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Style class of the main container element.</description>
		</attribute>
        <attribute>
			<name>backLabel</name>
			<required>false</required>
			<type>java.lang.String</type>
            <defaultValue>Back</defaultValue>
            <description>Text for back link, only applies to sliding menus. Default is "Back"</description>
		</attribute>
        <attribute>
			<name>triggerEvent</name>
			<required>false</required>
			<type>java.lang.String</type>
            <defaultValue>click</defaultValue>
            <description>Event name of component that will show the dynamic positioned menu. Default is click.</description>
		</attribute>
		<attribute>
			<name>easing</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Type of easing on sliding animation. Default is easeInOutCirc.</description>
		</attribute>
	</attributes>
	<resources>
        <resource>
			<name>jquery/ui/jquery-ui.css</name>
		</resource>
        <resource>
			<name>menu/menu.css</name>
		</resource>
		<resource>
			<name>jquery/jquery.js</name>
		</resource>
        <resource>
			<name>jquery/ui/jquery-ui.js</name>
		</resource>
        <resource>
			<name>core/core.js</name>
		</resource>
        <resource>
			<name>menu/menu.js</name>
		</resource>
	</resources>
</component>
